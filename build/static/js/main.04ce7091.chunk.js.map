{"version":3,"sources":["pokeball.png","components/result.jsx","components/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Result","props","Search","console","log","view","type","name","className","onClick","setView","App","useState","message","setMessage","useEffect","axios","get","then","res","data","src","pokeball","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,qC,eCW1BA,EARA,SAACC,GACd,OACE,8BACE,iDCyBSC,EAxBA,SAACD,GACdE,QAAQC,IAAI,UACZD,QAAQC,IAAI,eAAgBH,EAAMI,MAElC,OACE,gCACkB,WAAfJ,EAAMI,MACL,qCACE,sDACA,uCAAS,uBAAOC,KAAK,OAAOC,KAAK,YACjC,wBAAQC,UAAU,eAAeF,KAAK,SACpCG,QAAS,WARMR,EAAMS,QAAQ,WAO/B,wBAKY,WAAfT,EAAMI,MACL,mCACE,cAAC,EAAD,UC0CKM,MApDf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KAGbC,qBAAU,WACRC,IAAMC,IAAI,QACPC,MAAK,SAACC,GAGL,OAFAhB,QAAQC,IAAI,QAASe,GAEdL,EAAWK,EAAIC,WAYzB,IApBU,MAwBWR,mBAAS,SAxBpB,mBAwBNP,EAxBM,KAwBAK,EAxBA,KA4Bb,OACE,qBAAKF,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,4BAAIK,IAEM,UAATR,GACC,gCACE,wBAAQG,UAAU,cAAcF,KAAK,SACnCG,QAAS,WAVGC,EAAQ,WAStB,SAEE,qBAAKW,IAAKC,EAAUd,UAAU,WAAWe,IAAI,WAE/C,oHAGM,WAATlB,GACC,mCACE,cAAC,EAAD,CAAQA,KAAMA,EAAMK,QAASA,YC9C1Bc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04ce7091.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball.d9ffa6e8.png\";","//react\nimport { react, useState, useEffect } from 'react';\n\nconst Result = (props) => {\n  return (\n    <div>\n      <p> result dayo!</p>\n    </div >\n  )\n};\n\nexport default Result;","//react\nimport { react, useState, useEffect } from 'react';\n\n//components\nimport Result from './result';\n\n\nconst Search = (props) => {\n  console.log(\"search\")\n  console.log(\"props.view: \", props.view)\n  const toSearch = () => { props.setView(\"result\") };\n  return (\n    <div>\n      {props.view === \"search\" &&\n        <>\n          <p>please write pokemon!</p>\n          <p>name: <input type=\"text\" name=\"name\"></input></p>\n          <button className=\"searchButton\" type=\"button\"\n            onClick={() => { toSearch() }}\n          >Search!</button >\n        </>\n      }\n      {props.view === \"result\" &&\n        <>\n          <Result />\n        </>\n      }\n    </div >\n  )\n};\n\nexport default Search;","//library\nimport { react, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n//img\nimport pokeball from './pokeball.png'\nimport pokelogo from './pokemon_logo.png'\n\n//css\nimport './App.css';\n\n//compornents\nimport Search from './components/search';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    axios.get('/api')\n      .then((res) => {\n        console.log(\"res: \", res)\n        // return res.json()\n        return setMessage(res.data);\n      })\n    // fetch('/api')\n    //   .then((res) => {\n    //     console.log(\"res: \", res)\n    //     // return res.json()\n    //     return res;\n    //   })\n    //   .then((data) => {\n    //     console.log(\"data: \", data.body)\n    //     // return setMessage(data)\n    //   });\n  }, []);\n\n\n\n  const [view, setView] = useState(\"start\");\n\n  const toSearch = (() => setView(\"search\"));\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>{message}</p>\n        {/* https://pngimg.com/image/27658 */}\n        {view === \"start\" &&\n          <div>\n            <button className=\"startButton\" type=\"button\"\n              onClick={() => { toSearch() }}>\n              <img src={pokeball} className=\"pokeball\" alt=\"logo\" />\n            </button>\n            <p>pokemon name ðŸ‡ºðŸ‡¸ â†’ ðŸ‡¯ðŸ‡µ dictionary</p>\n          </div>\n        }\n        {view === \"search\" &&\n          <>\n            <Search view={view} setView={setView} />\n          </>\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}